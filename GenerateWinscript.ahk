filesToShortcutName := ["JPGIncAutoExecute", ""
, "JPGIncAdd", "Add"
, "JPGIncCodeReader", ""
, "JPGIncController", ""
, "JPGIncDefaultHotkeys", ""
, "JPGIncEdit", "Edit"
, "JPGIncNew", "New"
, "JPGIncOnScreen", ""
, "JPGIncRecompiler", ""
, "JPGIncRemove", "Remove"
, "JPGIncScriptIncluder", ""
, "JPGIncShortcutLauncher", ""
, "JPGIncUnpack", "Unpack"
, "JPGIncUpdate", "Update" ]

code =
(
;JPGIncWinscriptFlag Start shortcutNames
/* This program was written by Joshua Graham joshua.graham@jpgautomation.com
 * www.jpgautomation.com
 * Anyone may use any part of this code for any non-malicious purpose
 * with or without referencing me. There is No Warranty 
 */
;Do not edit this file.
JPGIncShortcuts := ""
JPGIncCodeSegments := ""
;JPGIncWinscriptFlag End shortcutNames
)
recompiler := new JPGIncRecompiler()


Loop, % filesToShortcutName.MaxIndex() / 2
{
	fileName := filesToShortcutName[(A_Index * 2) -1]
	addAsShortcut := filesToShortcutName[A_Index * 2]
	shortcutName := addAsShortcut ? addAsShortcut : fileName

	;~ MsgBox % "file name " filename "`naddasshort" (addAsShortcut == "") "`nshortcut name" shortcutName
	codeReader := new JPGIncCodeReader("Addons\" fileName ".ahk")
	codeSegment := codeReader.readCode()
	
	;~ MsgBox % codeSegment
	recompiler.joinCode(shortcutName, codeSegment, code, addAsShortcut)
}
IfExist, WinScript.ahk
{
	MsgBox, 4, WARNING, WARNING`nA winscript.ahk file already exists in the output folder. This will be deleted. Continue?
	IfMsgBox, no
	{
		ExitApp
	}
	FileDelete, WinScript.ahk
}

FileAppend, % code, WinScript.ahk
ExitApp
#c::ExitApp

#Include Addons\JPGIncRecompiler.ahk
#Include Addons\JPGIncCodeReader.ahk
#Include Addons\JPGIncHelperFunctions.ahk